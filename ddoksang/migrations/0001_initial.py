# Generated by Django 5.2.1 on 2025-06-12 02:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('artist', '0005_artist_fandom'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BdayCafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cafe_type', models.CharField(choices=[('bday', '생일'), ('debut', '데뷔일'), ('comeback', '컴백'), ('concert', '콘서트'), ('other', '기타')], default='bday', max_length=20, verbose_name='카페 유형')),
                ('cafe_name', models.CharField(max_length=100, verbose_name='카페명')),
                ('place_name', models.CharField(blank=True, max_length=100, verbose_name='장소명')),
                ('address', models.TextField(verbose_name='주소')),
                ('road_address', models.TextField(blank=True, verbose_name='도로명주소')),
                ('detailed_address', models.CharField(blank=True, max_length=200, verbose_name='상세주소')),
                ('kakao_place_id', models.CharField(blank=True, max_length=50, verbose_name='카카오 장소 ID')),
                ('latitude', models.FloatField(verbose_name='위도')),
                ('longitude', models.FloatField(verbose_name='경도')),
                ('start_date', models.DateField(verbose_name='시작일')),
                ('end_date', models.DateField(verbose_name='종료일')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='시작시간')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='종료시간')),
                ('special_benefits', models.TextField(blank=True, verbose_name='특전 정보')),
                ('event_description', models.TextField(blank=True, verbose_name='이벤트 설명')),
                ('hashtags', models.CharField(blank=True, max_length=500, verbose_name='해시태그')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='bday_cafes/main/', verbose_name='메인 이미지 (구버전)')),
                ('poster_image', models.ImageField(blank=True, null=True, upload_to='bday_cafes/poster/', verbose_name='포스터 이미지 (구버전)')),
                ('x_source', models.URLField(blank=True, verbose_name='X 출처')),
                ('status', models.CharField(choices=[('pending', '승인 대기'), ('approved', '승인됨'), ('rejected', '거부됨'), ('expired', '만료됨')], default='pending', max_length=20, verbose_name='상태')),
                ('is_featured', models.BooleanField(default=False, verbose_name='추천 여부')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='조회수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='승인일')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artist.artist', verbose_name='아티스트')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='artist.member', verbose_name='멤버')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='등록자')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_cafes', to=settings.AUTH_USER_MODEL, verbose_name='승인자')),
            ],
            options={
                'verbose_name': '생일카페',
                'verbose_name_plural': '생일카페 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BdayCafeImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='bday_cafes/images/%Y/%m/', verbose_name='이미지')),
                ('image_type', models.CharField(choices=[('main', '메인 이미지'), ('poster', '포스터'), ('menu', '메뉴판'), ('interior', '내부 전경'), ('exterior', '외부 전경'), ('goods', '굿즈/특전'), ('event', '이벤트'), ('other', '기타')], default='other', max_length=20, verbose_name='이미지 유형')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='이미지 설명')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='순서')),
                ('is_main', models.BooleanField(default=False, verbose_name='대표 이미지')),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='파일 크기(bytes)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ddoksang.bdaycafe')),
            ],
            options={
                'verbose_name': '생카 이미지',
                'verbose_name_plural': '생카 이미지들',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='CafeFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoritecafes', to='ddoksang.bdaycafe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '카페 즐겨찾기',
            },
        ),
        migrations.CreateModel(
            name='TourPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='투어명')),
                ('total_distance', models.FloatField(blank=True, null=True, verbose_name='총 거리(km)')),
                ('estimated_time', models.PositiveIntegerField(blank=True, null=True, verbose_name='예상 시간(분)')),
                ('start_point', models.JSONField(blank=True, null=True, verbose_name='시작점 정보')),
                ('route_data', models.JSONField(blank=True, null=True, verbose_name='경로 데이터')),
                ('is_public', models.BooleanField(default=False, verbose_name='공개 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '투어 계획',
                'verbose_name_plural': '투어 계획들',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TourStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='순서')),
                ('arrival_time', models.TimeField(blank=True, null=True, verbose_name='도착 예정시간')),
                ('stay_duration', models.PositiveIntegerField(default=30, verbose_name='체류시간(분)')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('cafe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ddoksang.bdaycafe')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='ddoksang.tourplan')),
            ],
            options={
                'verbose_name': '투어 정거장',
                'verbose_name_plural': '투어 정거장들',
                'ordering': ['order'],
            },
        ),
        migrations.AddIndex(
            model_name='bdaycafe',
            index=models.Index(fields=['latitude', 'longitude'], name='ddoksang_bd_latitud_49833f_idx'),
        ),
        migrations.AddIndex(
            model_name='bdaycafe',
            index=models.Index(fields=['start_date', 'end_date'], name='ddoksang_bd_start_d_acbb1c_idx'),
        ),
        migrations.AddIndex(
            model_name='bdaycafe',
            index=models.Index(fields=['status', 'start_date'], name='ddoksang_bd_status_dfb27d_idx'),
        ),
        migrations.AddIndex(
            model_name='bdaycafeimage',
            index=models.Index(fields=['cafe', 'is_main'], name='ddoksang_bd_cafe_id_65d5d7_idx'),
        ),
        migrations.AddIndex(
            model_name='bdaycafeimage',
            index=models.Index(fields=['cafe', 'order'], name='ddoksang_bd_cafe_id_06bbd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cafefavorite',
            unique_together={('user', 'cafe')},
        ),
        migrations.AlterUniqueTogether(
            name='tourstop',
            unique_together={('plan', 'order')},
        ),
    ]
