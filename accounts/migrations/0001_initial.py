# Generated by Django 5.2.1 on 2025-06-12 02:20

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FandomProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fandom_card', models.ImageField(blank=True, null=True, upload_to='fandom_cards/')),
                ('is_verified_fandom', models.BooleanField(default=False)),
                ('is_pending_verification', models.BooleanField(default=False)),
                ('verification_failed', models.BooleanField(default=False)),
                ('verification_start_date', models.DateField(blank=True, null=True, verbose_name='인증 시작일')),
                ('verification_end_date', models.DateField(blank=True, null=True, verbose_name='인증 만료일')),
                ('applied_at', models.DateTimeField(blank=True, null=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MannerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1점'), (2, '2점'), (3, '3점'), (4, '4점'), (5, '5점')], verbose_name='전반적인 거래 만족도')),
                ('description_match', models.CharField(max_length=50, verbose_name='상품 상태 일치 여부')),
                ('response_speed', models.CharField(max_length=50, verbose_name='응답 속도')),
                ('politeness', models.CharField(max_length=50, verbose_name='메시지 말투')),
                ('deal_again', models.CharField(max_length=10, verbose_name='재거래 의사')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': '이미 사용중인 이메일입니다.'}, max_length=254, unique=True)),
                ('username', models.CharField(error_messages={'unique': '이미 사용 중인 닉네임입니다.'}, max_length=20, unique=True)),
                ('profile_image', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format=None, keep_meta=True, quality=-1, scale=None, size=[500, 500], upload_to='profile')),
                ('bio', models.TextField(blank=True, null=True)),
                ('is_profile_completed', models.BooleanField(default=False, verbose_name='프로필 완성 여부')),
                ('social_signup_completed', models.BooleanField(default=False, verbose_name='소셜 가입 완료 여부')),
                ('is_temp_username', models.BooleanField(default=False, verbose_name='임시 사용자명 여부')),
                ('followings', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_encrypted_postal_code', models.TextField(blank=True, null=True)),
                ('_encrypted_jibun_address', models.TextField(blank=True, null=True)),
                ('_encrypted_road_address', models.TextField(blank=True, null=True)),
                ('_encrypted_detail_address', models.TextField(blank=True, null=True)),
                ('_encrypted_building_name', models.TextField(blank=True, null=True)),
                ('sido', models.CharField(max_length=20)),
                ('sigungu', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_code', models.CharField(max_length=10)),
                ('bank_name', models.CharField(max_length=50)),
                ('_encrypted_account_number', models.TextField()),
                ('account_holder', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
