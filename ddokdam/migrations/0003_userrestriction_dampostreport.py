# Generated by Django 5.2.1 on 2025-06-19 02:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('ddokdam', '0002_dambdaycafepost_linked_ddoksang_cafe_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRestriction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='제재 여부')),
                ('restriction_start', models.DateTimeField(blank=True, null=True, verbose_name='제재 시작일')),
                ('restriction_end', models.DateTimeField(blank=True, null=True, verbose_name='제재 종료일')),
                ('restriction_reason', models.TextField(blank=True, verbose_name='제재 사유')),
                ('warning_count', models.PositiveIntegerField(default=0, verbose_name='경고 횟수')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restriction_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '유저 제재 정보',
                'verbose_name_plural': '유저 제재 정보',
            },
        ),
        migrations.CreateModel(
            name='DamPostReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('reason', models.CharField(choices=[('profanity', '욕설, 불쾌한 표현 사용'), ('hate_spam', '혐오 발언, 반복적 광고, 선정적 내용'), ('illegal', '불법 콘텐츠, 범죄, 개인정보 노출')], max_length=20, verbose_name='신고 사유')),
                ('additional_info', models.TextField(blank=True, verbose_name='추가 설명')),
                ('status', models.CharField(choices=[('pending', '검토 중'), ('approved', '신고 승인'), ('rejected', '신고 반려'), ('resolved', '처리 완료')], default='pending', max_length=20, verbose_name='처리 상태')),
                ('violation_level', models.CharField(blank=True, choices=[('minor', '경미한 위반'), ('moderate', '중간 수준의 위반'), ('severe', '심각한 위반')], max_length=20, null=True, verbose_name='위반 수준')),
                ('admin_notes', models.TextField(blank=True, verbose_name='관리자 메모')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='처리 일시')),
                ('action_taken', models.CharField(blank=True, max_length=100, verbose_name='취한 조치')),
                ('restriction_start', models.DateTimeField(blank=True, null=True, verbose_name='제재 시작일')),
                ('restriction_end', models.DateTimeField(blank=True, null=True, verbose_name='제재 종료일')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='신고 일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dam_reports_processed', to=settings.AUTH_USER_MODEL, verbose_name='처리한 관리자')),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dam_reports_received', to=settings.AUTH_USER_MODEL, verbose_name='신고 대상 유저')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dam_reports_made', to=settings.AUTH_USER_MODEL, verbose_name='신고자')),
            ],
            options={
                'verbose_name': '덕담 게시글 신고',
                'verbose_name_plural': '덕담 게시글 신고 목록',
                'ordering': ['-created_at'],
                'unique_together': {('reporter', 'content_type', 'object_id')},
            },
        ),
    ]
