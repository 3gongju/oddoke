# Generated by Django 5.2.1 on 2025-06-26 05:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer_completed', models.BooleanField(default=False)),
                ('seller_completed', models.BooleanField(default=False)),
                ('room_code', models.CharField(blank=True, db_index=True, max_length=12, unique=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_buyer', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', '텍스트'), ('image', '이미지'), ('account_info', '계좌정보'), ('address_info', '주소정보')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ddokchat.chatroom')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ImageMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='chat_images/')),
                ('taken_datetime', models.DateTimeField(blank=True, help_text='촬영 날짜/시간', null=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='image_content', to='ddokchat.message')),
            ],
        ),
        migrations.CreateModel(
            name='AddressMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, help_text='거래 완료로 삭제된 정보')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='삭제된 시간', null=True)),
                ('address_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_messages', to='accounts.addressprofile')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address_content', to='ddokchat.message')),
            ],
        ),
        migrations.CreateModel(
            name='AccountInfoMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, help_text='거래 완료로 삭제된 정보')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='삭제된 시간', null=True)),
                ('bank_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_messages', to='accounts.bankprofile')),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account_content', to='ddokchat.message')),
            ],
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='text_content', to='ddokchat.message')),
            ],
        ),
        migrations.CreateModel(
            name='TradeReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('fraud', '사기 및 허위 거래'), ('no_payment', '대금 미지급'), ('no_delivery', '상품 미배송'), ('fake_product', '가짜/허위 상품'), ('no_response', '연락두절, 무응답'), ('item_condition', '상품 상태 허위 설명'), ('payment_issue', '결제 관련 문제'), ('inappropriate_behavior', '부적절한 거래 행위'), ('other', '기타')], max_length=30, verbose_name='신고 사유')),
                ('description', models.TextField(help_text='구체적인 신고 사유를 작성해주세요', verbose_name='신고 내용 상세')),
                ('evidence_text', models.TextField(blank=True, help_text='거래 과정에서 발생한 문제의 증거나 추가 설명', verbose_name='추가 증거 설명')),
                ('damage_amount', models.PositiveIntegerField(blank=True, help_text='사기로 인한 피해 금액 (원)', null=True, verbose_name='피해 금액')),
                ('status', models.CharField(choices=[('pending', '검토 중'), ('investigating', '조사 중'), ('resolved', '처리 완료'), ('rejected', '신고 반려')], default='pending', max_length=20, verbose_name='처리 상태')),
                ('admin_notes', models.TextField(blank=True, verbose_name='관리자 메모')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='처리 일시')),
                ('restriction_applied', models.BooleanField(default=False, verbose_name='제재 적용 여부')),
                ('restriction_start', models.DateTimeField(blank=True, null=True, verbose_name='제재 시작일')),
                ('restriction_end', models.DateTimeField(blank=True, null=True, verbose_name='제재 종료일')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='신고 일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('chatroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_reports', to='ddokchat.chatroom', verbose_name='관련 채팅방')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trade_reports_processed', to=settings.AUTH_USER_MODEL, verbose_name='처리한 관리자')),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_reports_received', to=settings.AUTH_USER_MODEL, verbose_name='신고 대상 유저')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_reports_made', to=settings.AUTH_USER_MODEL, verbose_name='신고자')),
            ],
            options={
                'verbose_name': '덕팜 거래 사기 신고',
                'verbose_name_plural': '덕팜 거래 사기 신고 목록',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['buyer', 'created_at'], name='ddokchat_ch_buyer_i_d36f95_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['seller', 'created_at'], name='ddokchat_ch_seller__9bb333_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['buyer_completed', 'seller_completed'], name='ddokchat_ch_buyer_c_342bf9_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['room_code'], name='ddokchat_ch_room_co_7c05e9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatroom',
            unique_together={('content_type', 'object_id', 'buyer')},
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(condition=models.Q(('is_read', False)), fields=['room', 'receiver', 'is_read'], name='idx_unread_messages'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['room', 'timestamp'], name='idx_room_messages'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['room', '-timestamp'], name='idx_latest_message'),
        ),
        migrations.AddIndex(
            model_name='tradereport',
            index=models.Index(fields=['status', 'created_at'], name='ddokchat_tr_status_6386fd_idx'),
        ),
        migrations.AddIndex(
            model_name='tradereport',
            index=models.Index(fields=['reported_user', 'created_at'], name='ddokchat_tr_reporte_001b03_idx'),
        ),
        migrations.AddIndex(
            model_name='tradereport',
            index=models.Index(fields=['reporter', 'created_at'], name='ddokchat_tr_reporte_8a9159_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tradereport',
            unique_together={('reporter', 'chatroom')},
        ),
    ]
